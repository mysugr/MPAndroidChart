buildscript {

    Properties properties = new Properties()
    if (rootProject.file('local.properties').exists()) {
        properties.load(rootProject.file('local.properties').newDataInputStream())
    }

    ext.publishingInfo = [
            version      : '3.1.0.mysugr.3',
            org          : 'mysugr',
            lib          : 'MPAndroidChart-mysugr',
            group        : 'com.github.PhilJay',
            site         : 'https://github.com/mysugr/MPAndroidChart',
            git          : 'scm:git@github.com/mysugr/MPAndroidChart.git',
            tracker      : 'https://github.com/mysugr/MPAndroidChart/issues',
            jfrogUrl     : 'https://mysugr.jfrog.io/mysugr/mysugr-release-local',
            jfrogUsername: properties['jfrog.username'],
            jfrogPassword: properties['jfrog.accesstoken']
    ]

    // For deployment to Artifactory:
    ext['signing.keyId'] = properties['GPG.keyId']
    ext['signing.secretKeyRingFile'] = rootProject.file(properties['GPG.secretKeyRingFile'])
    ext['signing.password'] = properties['GPG.password']
    ext['signing.keyId'] = properties['GPG.keyId']

    repositories {
        google()
        jcenter()
    }

    dependencies {
        classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.4"
    }
}

apply plugin: 'com.android.library'
apply from: 'publish-bintray.gradle'

group="${publishingInfo.group}.${publishingInfo.lib}"
version publishingInfo.version

android {
    compileSdkVersion 28
    buildToolsVersion '28.0.3'
    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 28
        versionCode 3
        versionName '3.1.0'
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    testOptions {
        unitTests.returnDefaultValues = true // this prevents "not mocked" error
    }
}

dependencies {
    implementation 'androidx.annotation:annotation:1.0.0'
    testImplementation 'junit:junit:4.12'
}

/*task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}*/

task javadoc(type: Javadoc) {
    options.charSet = 'UTF-8'
    failOnError  false
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

/*artifacts { // TODO was double?
    archives sourcesJar
    archives javadocJar
}*/

apply from: 'publish-maven.gradle'